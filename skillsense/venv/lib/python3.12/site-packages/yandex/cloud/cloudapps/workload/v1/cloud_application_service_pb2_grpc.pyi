"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import google.protobuf.empty_pb2
import grpc
import grpc.aio
import typing
import yandex.cloud.cloudapps.workload.v1.cloud_application_pb2
import yandex.cloud.cloudapps.workload.v1.cloud_application_service_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class CloudApplicationServiceStub:
    """Cloud Application Service to be used by Workload software inside Cloud Application installations"""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        yandex.cloud.cloudapps.workload.v1.cloud_application_pb2.CloudApplication,
    ]
    """Get Current Application"""

    ResolveByWorkload: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.cloudapps.workload.v1.cloud_application_service_pb2.ResolveByWorkloadRequest,
        yandex.cloud.cloudapps.workload.v1.cloud_application_service_pb2.ResolveByWorkloadResponse,
    ]
    """Resolve Cloud Application by workload"""

class CloudApplicationServiceAsyncStub:
    """Cloud Application Service to be used by Workload software inside Cloud Application installations"""

    Get: grpc.aio.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        yandex.cloud.cloudapps.workload.v1.cloud_application_pb2.CloudApplication,
    ]
    """Get Current Application"""

    ResolveByWorkload: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.cloudapps.workload.v1.cloud_application_service_pb2.ResolveByWorkloadRequest,
        yandex.cloud.cloudapps.workload.v1.cloud_application_service_pb2.ResolveByWorkloadResponse,
    ]
    """Resolve Cloud Application by workload"""

class CloudApplicationServiceServicer(metaclass=abc.ABCMeta):
    """Cloud Application Service to be used by Workload software inside Cloud Application installations"""

    @abc.abstractmethod
    def Get(
        self,
        request: google.protobuf.empty_pb2.Empty,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.cloudapps.workload.v1.cloud_application_pb2.CloudApplication, collections.abc.Awaitable[yandex.cloud.cloudapps.workload.v1.cloud_application_pb2.CloudApplication]]:
        """Get Current Application"""

    @abc.abstractmethod
    def ResolveByWorkload(
        self,
        request: yandex.cloud.cloudapps.workload.v1.cloud_application_service_pb2.ResolveByWorkloadRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.cloudapps.workload.v1.cloud_application_service_pb2.ResolveByWorkloadResponse, collections.abc.Awaitable[yandex.cloud.cloudapps.workload.v1.cloud_application_service_pb2.ResolveByWorkloadResponse]]:
        """Resolve Cloud Application by workload"""

def add_CloudApplicationServiceServicer_to_server(servicer: CloudApplicationServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

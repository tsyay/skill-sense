"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.operation.operation_pb2
import yandex.cloud.smartwebsecurity.v1.security_profile_pb2
import yandex.cloud.smartwebsecurity.v1.security_profile_service_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class SecurityProfileServiceStub:
    """A set of methods for managing SecurityProfile resources."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.smartwebsecurity.v1.security_profile_service_pb2.GetSecurityProfileRequest,
        yandex.cloud.smartwebsecurity.v1.security_profile_pb2.SecurityProfile,
    ]
    """Returns the specified SecurityProfile resource."""

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.smartwebsecurity.v1.security_profile_service_pb2.ListSecurityProfilesRequest,
        yandex.cloud.smartwebsecurity.v1.security_profile_service_pb2.ListSecurityProfilesResponse,
    ]
    """Retrieves the list of SecurityProfile resources in the specified folder."""

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.smartwebsecurity.v1.security_profile_service_pb2.CreateSecurityProfileRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates a security profile in the specified folder using the data specified in the request."""

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.smartwebsecurity.v1.security_profile_service_pb2.UpdateSecurityProfileRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified security profile."""

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.smartwebsecurity.v1.security_profile_service_pb2.DeleteSecurityProfileRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified security profile."""

class SecurityProfileServiceAsyncStub:
    """A set of methods for managing SecurityProfile resources."""

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.smartwebsecurity.v1.security_profile_service_pb2.GetSecurityProfileRequest,
        yandex.cloud.smartwebsecurity.v1.security_profile_pb2.SecurityProfile,
    ]
    """Returns the specified SecurityProfile resource."""

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.smartwebsecurity.v1.security_profile_service_pb2.ListSecurityProfilesRequest,
        yandex.cloud.smartwebsecurity.v1.security_profile_service_pb2.ListSecurityProfilesResponse,
    ]
    """Retrieves the list of SecurityProfile resources in the specified folder."""

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.smartwebsecurity.v1.security_profile_service_pb2.CreateSecurityProfileRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates a security profile in the specified folder using the data specified in the request."""

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.smartwebsecurity.v1.security_profile_service_pb2.UpdateSecurityProfileRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified security profile."""

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.smartwebsecurity.v1.security_profile_service_pb2.DeleteSecurityProfileRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified security profile."""

class SecurityProfileServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing SecurityProfile resources."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.smartwebsecurity.v1.security_profile_service_pb2.GetSecurityProfileRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.smartwebsecurity.v1.security_profile_pb2.SecurityProfile, collections.abc.Awaitable[yandex.cloud.smartwebsecurity.v1.security_profile_pb2.SecurityProfile]]:
        """Returns the specified SecurityProfile resource."""

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.smartwebsecurity.v1.security_profile_service_pb2.ListSecurityProfilesRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.smartwebsecurity.v1.security_profile_service_pb2.ListSecurityProfilesResponse, collections.abc.Awaitable[yandex.cloud.smartwebsecurity.v1.security_profile_service_pb2.ListSecurityProfilesResponse]]:
        """Retrieves the list of SecurityProfile resources in the specified folder."""

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.smartwebsecurity.v1.security_profile_service_pb2.CreateSecurityProfileRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Creates a security profile in the specified folder using the data specified in the request."""

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.smartwebsecurity.v1.security_profile_service_pb2.UpdateSecurityProfileRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Updates the specified security profile."""

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.smartwebsecurity.v1.security_profile_service_pb2.DeleteSecurityProfileRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Deletes the specified security profile."""

def add_SecurityProfileServiceServicer_to_server(servicer: SecurityProfileServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

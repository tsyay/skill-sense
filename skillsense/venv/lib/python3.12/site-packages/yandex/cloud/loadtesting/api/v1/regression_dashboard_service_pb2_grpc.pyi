"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.loadtesting.api.v1.regression.dashboard_pb2
import yandex.cloud.loadtesting.api.v1.regression_dashboard_service_pb2
import yandex.cloud.operation.operation_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class RegressionDashboardServiceStub:
    """A set of methods for managing Load Testing Regression Dashboards."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.loadtesting.api.v1.regression_dashboard_service_pb2.CreateRegressionDashboardRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates a regression dashboard in the specified folder."""

    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.loadtesting.api.v1.regression_dashboard_service_pb2.GetRegressionDashboardRequest,
        yandex.cloud.loadtesting.api.v1.regression.dashboard_pb2.Dashboard,
    ]
    """Returns the specified regression dashboard.

    To get the list of all available regression dashboards, make a [List] request.
    """

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.loadtesting.api.v1.regression_dashboard_service_pb2.ListRegressionDashboardsRequest,
        yandex.cloud.loadtesting.api.v1.regression_dashboard_service_pb2.ListRegressionDashboardsResponse,
    ]
    """Retrieves the list of regression dashboards in the specified folder."""

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.loadtesting.api.v1.regression_dashboard_service_pb2.DeleteRegressionDashboardRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified regression dashboard."""

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.loadtesting.api.v1.regression_dashboard_service_pb2.UpdateRegressionDashboardRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified regression dashboard."""

class RegressionDashboardServiceAsyncStub:
    """A set of methods for managing Load Testing Regression Dashboards."""

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.loadtesting.api.v1.regression_dashboard_service_pb2.CreateRegressionDashboardRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates a regression dashboard in the specified folder."""

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.loadtesting.api.v1.regression_dashboard_service_pb2.GetRegressionDashboardRequest,
        yandex.cloud.loadtesting.api.v1.regression.dashboard_pb2.Dashboard,
    ]
    """Returns the specified regression dashboard.

    To get the list of all available regression dashboards, make a [List] request.
    """

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.loadtesting.api.v1.regression_dashboard_service_pb2.ListRegressionDashboardsRequest,
        yandex.cloud.loadtesting.api.v1.regression_dashboard_service_pb2.ListRegressionDashboardsResponse,
    ]
    """Retrieves the list of regression dashboards in the specified folder."""

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.loadtesting.api.v1.regression_dashboard_service_pb2.DeleteRegressionDashboardRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified regression dashboard."""

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.loadtesting.api.v1.regression_dashboard_service_pb2.UpdateRegressionDashboardRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified regression dashboard."""

class RegressionDashboardServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing Load Testing Regression Dashboards."""

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.loadtesting.api.v1.regression_dashboard_service_pb2.CreateRegressionDashboardRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Creates a regression dashboard in the specified folder."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.loadtesting.api.v1.regression_dashboard_service_pb2.GetRegressionDashboardRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.loadtesting.api.v1.regression.dashboard_pb2.Dashboard, collections.abc.Awaitable[yandex.cloud.loadtesting.api.v1.regression.dashboard_pb2.Dashboard]]:
        """Returns the specified regression dashboard.

        To get the list of all available regression dashboards, make a [List] request.
        """

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.loadtesting.api.v1.regression_dashboard_service_pb2.ListRegressionDashboardsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.loadtesting.api.v1.regression_dashboard_service_pb2.ListRegressionDashboardsResponse, collections.abc.Awaitable[yandex.cloud.loadtesting.api.v1.regression_dashboard_service_pb2.ListRegressionDashboardsResponse]]:
        """Retrieves the list of regression dashboards in the specified folder."""

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.loadtesting.api.v1.regression_dashboard_service_pb2.DeleteRegressionDashboardRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Deletes the specified regression dashboard."""

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.loadtesting.api.v1.regression_dashboard_service_pb2.UpdateRegressionDashboardRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Updates the specified regression dashboard."""

def add_RegressionDashboardServiceServicer_to_server(servicer: RegressionDashboardServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import yandex.cloud.loadtesting.api.v1.regression.dashboard_pb2

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class CreateRegressionDashboardRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FOLDER_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    CONTENT_FIELD_NUMBER: builtins.int
    folder_id: builtins.str
    """ID of the folder to create a regression dashboard in."""
    name: builtins.str
    """Name of the dashboard."""
    description: builtins.str
    """Description of the dashboard."""
    @property
    def content(self) -> yandex.cloud.loadtesting.api.v1.regression.dashboard_pb2.Dashboard.Content:
        """Content of the dashboard."""

    def __init__(
        self,
        *,
        folder_id: builtins.str = ...,
        name: builtins.str = ...,
        description: builtins.str = ...,
        content: yandex.cloud.loadtesting.api.v1.regression.dashboard_pb2.Dashboard.Content | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["content", b"content"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["content", b"content", "description", b"description", "folder_id", b"folder_id", "name", b"name"]) -> None: ...

global___CreateRegressionDashboardRequest = CreateRegressionDashboardRequest

@typing.final
class CreateRegressionDashboardMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DASHBOARD_ID_FIELD_NUMBER: builtins.int
    dashboard_id: builtins.str
    """ID of the dashboard that is being created."""
    def __init__(
        self,
        *,
        dashboard_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["dashboard_id", b"dashboard_id"]) -> None: ...

global___CreateRegressionDashboardMetadata = CreateRegressionDashboardMetadata

@typing.final
class GetRegressionDashboardRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DASHBOARD_ID_FIELD_NUMBER: builtins.int
    dashboard_id: builtins.str
    """ID of the dashboard to return."""
    def __init__(
        self,
        *,
        dashboard_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["dashboard_id", b"dashboard_id"]) -> None: ...

global___GetRegressionDashboardRequest = GetRegressionDashboardRequest

@typing.final
class DeleteRegressionDashboardRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DASHBOARD_ID_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    dashboard_id: builtins.str
    """ID of the dashboard to delete."""
    etag: builtins.str
    """The current etag of the dashboard."""
    def __init__(
        self,
        *,
        dashboard_id: builtins.str = ...,
        etag: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["dashboard_id", b"dashboard_id", "etag", b"etag"]) -> None: ...

global___DeleteRegressionDashboardRequest = DeleteRegressionDashboardRequest

@typing.final
class DeleteRegressionDashboardMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DASHBOARD_ID_FIELD_NUMBER: builtins.int
    dashboard_id: builtins.str
    """ID of the dashboard that is being deleted."""
    def __init__(
        self,
        *,
        dashboard_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["dashboard_id", b"dashboard_id"]) -> None: ...

global___DeleteRegressionDashboardMetadata = DeleteRegressionDashboardMetadata

@typing.final
class ListRegressionDashboardsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FOLDER_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    folder_id: builtins.str
    """ID of the folder to list dashboards in."""
    page_size: builtins.int
    """The maximum number of results per page to return. If the number of available
    results is larger than `page_size`, the service returns a [ListRegressionDashboardsResponse.next_page_token]
    that can be used to get the next page of results in subsequent list requests.
    Default value: 100.
    """
    page_token: builtins.str
    """Page token. To get the next page of results, set `page_token` to the 
    [ListRegressionDashboardsResponse.next_page_token] returned by a previous list request.
    """
    filter: builtins.str
    """A filter expression that filters dashboards listed in the response.

    The filter expression may contain multiple field expressions joined by `AND`.
    The field expression must specify:
    1. The field name.
    2. An operator:
       - `=`, `!=`, `CONTAINS`, for single values.
       - `IN` or `NOT IN` for lists of values.
    3. The value. String values must be encosed in `"`, boolean values are {`true`, `false`}, timestamp values in ISO-8601.

    Currently supported fields:
    - `id` [yandex.cloud.loadtesting.api.v1.regression.Dashboard.id]
      - operators: `=`, `!=`, `IN`, `NOT IN`
    - `name` [yandex.cloud.loadtesting.api.v1.regression.Dashboard.name]
      - operators: `=`, `!=`, `IN`, `NOT IN`, `CONTAINS`

    Examples: 
    - `id IN ("1", "2", "3")`
    - `name CONTAINS "my-dashboard" AND id NOT IN ("4", "5")`
    """
    def __init__(
        self,
        *,
        folder_id: builtins.str = ...,
        page_size: builtins.int = ...,
        page_token: builtins.str = ...,
        filter: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["filter", b"filter", "folder_id", b"folder_id", "page_size", b"page_size", "page_token", b"page_token"]) -> None: ...

global___ListRegressionDashboardsRequest = ListRegressionDashboardsRequest

@typing.final
class ListRegressionDashboardsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DASHBOARDS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    next_page_token: builtins.str
    """Token for getting the next page of the list. If the number of results is greater than
    the specified [ListRegressionDashboardsRequest.page_size], use `next_page_token` as the value
    for the [ListRegressionDashboardsRequest.page_token] parameter in the next list request.

    Each subsequent page will have its own `next_page_token` to continue paging through the results.
    """
    @property
    def dashboards(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.loadtesting.api.v1.regression.dashboard_pb2.Dashboard]:
        """List of dashboards in the specified folder."""

    def __init__(
        self,
        *,
        dashboards: collections.abc.Iterable[yandex.cloud.loadtesting.api.v1.regression.dashboard_pb2.Dashboard] | None = ...,
        next_page_token: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["dashboards", b"dashboards", "next_page_token", b"next_page_token"]) -> None: ...

global___ListRegressionDashboardsResponse = ListRegressionDashboardsResponse

@typing.final
class UpdateRegressionDashboardRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DASHBOARD_ID_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    CONTENT_FIELD_NUMBER: builtins.int
    dashboard_id: builtins.str
    """ID of the dashboards to update."""
    etag: builtins.str
    """The current etag of the dashboard."""
    name: builtins.str
    """New name of the dashboard."""
    description: builtins.str
    """New description of the dashboard."""
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Field mask that specifies which attributes of the dashboard are going to be updated."""

    @property
    def content(self) -> yandex.cloud.loadtesting.api.v1.regression.dashboard_pb2.Dashboard.Content:
        """New content of the dashboard."""

    def __init__(
        self,
        *,
        dashboard_id: builtins.str = ...,
        etag: builtins.str = ...,
        update_mask: google.protobuf.field_mask_pb2.FieldMask | None = ...,
        name: builtins.str = ...,
        description: builtins.str = ...,
        content: yandex.cloud.loadtesting.api.v1.regression.dashboard_pb2.Dashboard.Content | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["content", b"content", "update_mask", b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["content", b"content", "dashboard_id", b"dashboard_id", "description", b"description", "etag", b"etag", "name", b"name", "update_mask", b"update_mask"]) -> None: ...

global___UpdateRegressionDashboardRequest = UpdateRegressionDashboardRequest

@typing.final
class UpdateRegressionDashboardMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DASHBOARD_ID_FIELD_NUMBER: builtins.int
    dashboard_id: builtins.str
    """ID of the dashboard that is being updated."""
    def __init__(
        self,
        *,
        dashboard_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["dashboard_id", b"dashboard_id"]) -> None: ...

global___UpdateRegressionDashboardMetadata = UpdateRegressionDashboardMetadata

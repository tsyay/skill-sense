"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.searchapi.v2.gen_search_service_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class GenSearchServiceStub:
    """A set of methods for searching the Yandex search database using YandexGPT generative AI."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Search: grpc.UnaryStreamMultiCallable[
        yandex.cloud.searchapi.v2.gen_search_service_pb2.GenSearchRequest,
        yandex.cloud.searchapi.v2.gen_search_service_pb2.GenSearchResponse,
    ]

class GenSearchServiceAsyncStub:
    """A set of methods for searching the Yandex search database using YandexGPT generative AI."""

    Search: grpc.aio.UnaryStreamMultiCallable[
        yandex.cloud.searchapi.v2.gen_search_service_pb2.GenSearchRequest,
        yandex.cloud.searchapi.v2.gen_search_service_pb2.GenSearchResponse,
    ]

class GenSearchServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for searching the Yandex search database using YandexGPT generative AI."""

    @abc.abstractmethod
    def Search(
        self,
        request: yandex.cloud.searchapi.v2.gen_search_service_pb2.GenSearchRequest,
        context: _ServicerContext,
    ) -> typing.Union[collections.abc.Iterator[yandex.cloud.searchapi.v2.gen_search_service_pb2.GenSearchResponse], collections.abc.AsyncIterator[yandex.cloud.searchapi.v2.gen_search_service_pb2.GenSearchResponse]]: ...

def add_GenSearchServiceServicer_to_server(servicer: GenSearchServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

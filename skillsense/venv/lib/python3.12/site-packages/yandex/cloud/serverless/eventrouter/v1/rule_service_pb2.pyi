"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import yandex.cloud.operation.operation_pb2
import yandex.cloud.serverless.eventrouter.v1.rule_pb2

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class GetRuleRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RULE_ID_FIELD_NUMBER: builtins.int
    rule_id: builtins.str
    """ID of the rule to return."""
    def __init__(
        self,
        *,
        rule_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["rule_id", b"rule_id"]) -> None: ...

global___GetRuleRequest = GetRuleRequest

@typing.final
class ListRulesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BUS_ID_FIELD_NUMBER: builtins.int
    FOLDER_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    bus_id: builtins.str
    """ID of the bus to list rules in."""
    folder_id: builtins.str
    """ID of the folder to list rules in."""
    page_size: builtins.int
    """The maximum number of results per response."""
    page_token: builtins.str
    """Page token. To get the next page of results, set `page_token` to the
    `next_page_token` returned by a previous list request.
    """
    filter: builtins.str
    """Supported fields for filter:
      name
      created_at
    """
    def __init__(
        self,
        *,
        bus_id: builtins.str = ...,
        folder_id: builtins.str = ...,
        page_size: builtins.int = ...,
        page_token: builtins.str = ...,
        filter: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["bus_id", b"bus_id", "container_id", b"container_id", "folder_id", b"folder_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["bus_id", b"bus_id", "container_id", b"container_id", "filter", b"filter", "folder_id", b"folder_id", "page_size", b"page_size", "page_token", b"page_token"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["container_id", b"container_id"]) -> typing.Literal["bus_id", "folder_id"] | None: ...

global___ListRulesRequest = ListRulesRequest

@typing.final
class ListRulesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RULES_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    next_page_token: builtins.str
    """Token for getting the next page of the list of rules."""
    @property
    def rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.serverless.eventrouter.v1.rule_pb2.Rule]:
        """List of rules."""

    def __init__(
        self,
        *,
        rules: collections.abc.Iterable[yandex.cloud.serverless.eventrouter.v1.rule_pb2.Rule] | None = ...,
        next_page_token: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["next_page_token", b"next_page_token", "rules", b"rules"]) -> None: ...

global___ListRulesResponse = ListRulesResponse

@typing.final
class CreateRuleRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    BUS_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    TARGETS_FIELD_NUMBER: builtins.int
    DELETION_PROTECTION_FIELD_NUMBER: builtins.int
    bus_id: builtins.str
    """ID of the bus to create a rule for."""
    name: builtins.str
    """Name of the rule."""
    description: builtins.str
    """Description of the rule."""
    deletion_protection: builtins.bool
    """Flag that disallow deletion of the rule."""
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """Labels for the rule."""

    @property
    def filter(self) -> yandex.cloud.serverless.eventrouter.v1.rule_pb2.Filter:
        """Filter for the rule."""

    @property
    def targets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.serverless.eventrouter.v1.rule_pb2.Target]:
        """Targets for the rule."""

    def __init__(
        self,
        *,
        bus_id: builtins.str = ...,
        name: builtins.str = ...,
        description: builtins.str = ...,
        labels: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        filter: yandex.cloud.serverless.eventrouter.v1.rule_pb2.Filter | None = ...,
        targets: collections.abc.Iterable[yandex.cloud.serverless.eventrouter.v1.rule_pb2.Target] | None = ...,
        deletion_protection: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["filter", b"filter"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["bus_id", b"bus_id", "deletion_protection", b"deletion_protection", "description", b"description", "filter", b"filter", "labels", b"labels", "name", b"name", "targets", b"targets"]) -> None: ...

global___CreateRuleRequest = CreateRuleRequest

@typing.final
class CreateRuleMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RULE_ID_FIELD_NUMBER: builtins.int
    BUS_ID_FIELD_NUMBER: builtins.int
    rule_id: builtins.str
    """ID of the rule that is being created."""
    bus_id: builtins.str
    """ID of the bus that the rule belongs to."""
    def __init__(
        self,
        *,
        rule_id: builtins.str = ...,
        bus_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["bus_id", b"bus_id", "rule_id", b"rule_id"]) -> None: ...

global___CreateRuleMetadata = CreateRuleMetadata

@typing.final
class UpdateRuleRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    RULE_ID_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    TARGETS_FIELD_NUMBER: builtins.int
    DELETION_PROTECTION_FIELD_NUMBER: builtins.int
    rule_id: builtins.str
    """ID of the rule to update."""
    name: builtins.str
    """New name of the rule."""
    description: builtins.str
    """New description of the rule."""
    deletion_protection: builtins.bool
    """New flag that disallow deletion of the rule."""
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Field mask that specifies which fields of the rule are going to be updated."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """New labels for the rule."""

    @property
    def filter(self) -> yandex.cloud.serverless.eventrouter.v1.rule_pb2.Filter:
        """New filter for the rule."""

    @property
    def targets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.serverless.eventrouter.v1.rule_pb2.Target]:
        """New targets for the rule."""

    def __init__(
        self,
        *,
        rule_id: builtins.str = ...,
        update_mask: google.protobuf.field_mask_pb2.FieldMask | None = ...,
        name: builtins.str = ...,
        description: builtins.str = ...,
        labels: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        filter: yandex.cloud.serverless.eventrouter.v1.rule_pb2.Filter | None = ...,
        targets: collections.abc.Iterable[yandex.cloud.serverless.eventrouter.v1.rule_pb2.Target] | None = ...,
        deletion_protection: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["filter", b"filter", "update_mask", b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["deletion_protection", b"deletion_protection", "description", b"description", "filter", b"filter", "labels", b"labels", "name", b"name", "rule_id", b"rule_id", "targets", b"targets", "update_mask", b"update_mask"]) -> None: ...

global___UpdateRuleRequest = UpdateRuleRequest

@typing.final
class UpdateRuleMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RULE_ID_FIELD_NUMBER: builtins.int
    rule_id: builtins.str
    """ID of the rule that is being updated."""
    def __init__(
        self,
        *,
        rule_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["rule_id", b"rule_id"]) -> None: ...

global___UpdateRuleMetadata = UpdateRuleMetadata

@typing.final
class DeleteRuleRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RULE_ID_FIELD_NUMBER: builtins.int
    rule_id: builtins.str
    """ID of the rule to delete."""
    def __init__(
        self,
        *,
        rule_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["rule_id", b"rule_id"]) -> None: ...

global___DeleteRuleRequest = DeleteRuleRequest

@typing.final
class DeleteRuleMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RULE_ID_FIELD_NUMBER: builtins.int
    rule_id: builtins.str
    """ID of the rule that is being deleted."""
    def __init__(
        self,
        *,
        rule_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["rule_id", b"rule_id"]) -> None: ...

global___DeleteRuleMetadata = DeleteRuleMetadata

@typing.final
class ListRuleOperationsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RULE_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    rule_id: builtins.str
    """ID of the rule to list operations for."""
    page_size: builtins.int
    """The maximum number of results per response."""
    page_token: builtins.str
    """Page token. To get the next page of results, set `page_token` to the
    `next_page_token` returned by a previous list request.
    """
    filter: builtins.str
    """Supported attributes for filter:
      description
      created_at
      modified_at
      created_by
      done
    """
    def __init__(
        self,
        *,
        rule_id: builtins.str = ...,
        page_size: builtins.int = ...,
        page_token: builtins.str = ...,
        filter: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["filter", b"filter", "page_size", b"page_size", "page_token", b"page_token", "rule_id", b"rule_id"]) -> None: ...

global___ListRuleOperationsRequest = ListRuleOperationsRequest

@typing.final
class ListRuleOperationsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OPERATIONS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    next_page_token: builtins.str
    """Token for getting the next page of the list of operations."""
    @property
    def operations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.operation.operation_pb2.Operation]:
        """List of operations for the specified rule."""

    def __init__(
        self,
        *,
        operations: collections.abc.Iterable[yandex.cloud.operation.operation_pb2.Operation] | None = ...,
        next_page_token: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["next_page_token", b"next_page_token", "operations", b"operations"]) -> None: ...

global___ListRuleOperationsResponse = ListRuleOperationsResponse

@typing.final
class EnableRuleRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RULE_ID_FIELD_NUMBER: builtins.int
    rule_id: builtins.str
    """ID of the rule to enable."""
    def __init__(
        self,
        *,
        rule_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["rule_id", b"rule_id"]) -> None: ...

global___EnableRuleRequest = EnableRuleRequest

@typing.final
class EnableRuleMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RULE_ID_FIELD_NUMBER: builtins.int
    rule_id: builtins.str
    """ID of the rule that is being enabled."""
    def __init__(
        self,
        *,
        rule_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["rule_id", b"rule_id"]) -> None: ...

global___EnableRuleMetadata = EnableRuleMetadata

@typing.final
class DisableRuleRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RULE_ID_FIELD_NUMBER: builtins.int
    rule_id: builtins.str
    """ID of the rule to disable."""
    def __init__(
        self,
        *,
        rule_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["rule_id", b"rule_id"]) -> None: ...

global___DisableRuleRequest = DisableRuleRequest

@typing.final
class DisableRuleMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RULE_ID_FIELD_NUMBER: builtins.int
    rule_id: builtins.str
    """ID of the rule that is being disabled."""
    def __init__(
        self,
        *,
        rule_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["rule_id", b"rule_id"]) -> None: ...

global___DisableRuleMetadata = DisableRuleMetadata

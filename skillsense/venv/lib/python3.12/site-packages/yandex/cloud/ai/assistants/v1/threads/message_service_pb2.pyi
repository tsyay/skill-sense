"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import yandex.cloud.ai.assistants.v1.threads.message_pb2

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class CreateMessageRequest(google.protobuf.message.Message):
    """Request to create a new message in a specific thread."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    THREAD_ID_FIELD_NUMBER: builtins.int
    AUTHOR_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    CONTENT_FIELD_NUMBER: builtins.int
    thread_id: builtins.str
    """ID of the thread to which the message will be added."""
    @property
    def author(self) -> yandex.cloud.ai.assistants.v1.threads.message_pb2.Author:
        """Author of the message, containing details about the message's creator.
        If not provided, the default author ID specified in the corresponding thread will be used.
        """

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """Set of key-value pairs to label the message."""

    @property
    def content(self) -> yandex.cloud.ai.assistants.v1.threads.message_pb2.MessageContent:
        """Content of the message."""

    def __init__(
        self,
        *,
        thread_id: builtins.str = ...,
        author: yandex.cloud.ai.assistants.v1.threads.message_pb2.Author | None = ...,
        labels: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        content: yandex.cloud.ai.assistants.v1.threads.message_pb2.MessageContent | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["author", b"author", "content", b"content"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["author", b"author", "content", b"content", "labels", b"labels", "thread_id", b"thread_id"]) -> None: ...

global___CreateMessageRequest = CreateMessageRequest

@typing.final
class GetMessageRequest(google.protobuf.message.Message):
    """Request message for retrieving a message from a thread."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    THREAD_ID_FIELD_NUMBER: builtins.int
    MESSAGE_ID_FIELD_NUMBER: builtins.int
    thread_id: builtins.str
    """ID of the thread that contains the message."""
    message_id: builtins.str
    """ID of the message to retrieve."""
    def __init__(
        self,
        *,
        thread_id: builtins.str = ...,
        message_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["message_id", b"message_id", "thread_id", b"thread_id"]) -> None: ...

global___GetMessageRequest = GetMessageRequest

@typing.final
class ListMessagesRequest(google.protobuf.message.Message):
    """Request message for listing messages in a specific thread."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    THREAD_ID_FIELD_NUMBER: builtins.int
    thread_id: builtins.str
    """ID of the thread whose messages will be listed."""
    def __init__(
        self,
        *,
        thread_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["thread_id", b"thread_id"]) -> None: ...

global___ListMessagesRequest = ListMessagesRequest
